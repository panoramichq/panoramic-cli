---
name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]

    steps:
      - uses: "actions/checkout@v2"
        with:
          ssh_key: ${{ secrets.e2e_tests_ssh_key }}
          submodules: true
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          pip install --upgrade pip setuptools wheel tox tox-gh-actions
          rm -rf s3_upload && mkdir s3_upload
          python shipping/generate-versions-file.py
          mv versions.json s3_upload/versions.json

      - name: "Run tox target for ${{ matrix.python-version }}"
        run: "tox"

  package:
    name: "Build & verify package"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"

      - name: "Install pep517 and twine"
        run: "pip install pep517 twine"

      - name: "Build package"
        run: "python -m pep517.build --source --binary ."

      - name: "Check long_description"
        run: "twine check dist/*"

      # - name: Publish distribution ðŸ“¦ to Test PyPI
      #   uses: pypa/gh-action-pypi-publish@master
      #   with:
      #     password: ${{ secrets.test_pypi_password }}
      #     repository_url: https://test.pypi.org/legacy/

      - name: Publish distribution to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
  # install-dev:
  #   strategy:
  #     matrix:
  #       os: ["ubuntu-latest", "windows-latest", "macos-latest"]
  #   name: "Verify dev env"
  #   runs-on: "${{ matrix.os }}"
  #   steps:
  #     - uses: "actions/checkout@v2"
  #     - uses: "actions/setup-python@v2"
  #       with:
  #         python-version: "3.9"
  #     - name: "Install in dev mode"
  #       run: "python -m pip install -e .[dev]"
  #     - name: "Import package"
  #       run: "python -c 'import attr; print(attr.__version__)'"
