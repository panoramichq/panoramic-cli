---
name: CI

on:
  push:
    branches: ["master"]
    tags: ["v*"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  tests:
    name: "Python ${{ matrix.python-version }} - ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install system dependencies"
        run: python -m pip install --upgrade pip setuptools wheel tox==3.21.0 tox-gh-actions
      - name: "Install dependencies"
        run: make install
      - name: "Run tox target for ${{ matrix.python-version }}"
        run: "tox"

  package:
    name: "Build & verify package"
    runs-on: "ubuntu-latest"
    needs: tests

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.7"

      - name: "Install pep517 and twine"
        run: "pip install pep517 twine"

      - name: "Build package"
        run: "python -m pep517.build --source --binary ."

      - name: "Check long_description"
        run: "twine check dist/*"

      - name: Publish distribution to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_secret }}

      - name: Checkout Homebrew repo
        uses: "actions/checkout@v2"
        if: startsWith(github.ref, 'refs/tags')
        with:
          repository: panoramichq/homebrew-brew
          ssh-key: ${{ secrets.homebrew_ssh_key }}
          path: .homebrew_repo

      - name: Update Homebrew with new release version
        if: startsWith(github.ref, 'refs/tags')
        run: bash shipping/update_homebrew.sh

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags')
        id: create_release
        uses: panoramichq/github-release@v2.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.release.tag_name }}
          name: ${{ github.event.release.tag_name }}
          files: dist/
          draft: false
          prerelease: false
